{
  "name": "accel-mma84",
  "version": "0.2.3",
  "description": "Library to run the MMA8452Q accelerometer.",
  "main": "index.js",
  "scripts": {
    "test": "tinytap -e 'tessel run {} ${ACCEL_PORT}' test/*.js"
  },
  "dependencies": {
    "sync-queue": "0.0.1"
  },
  "hardware": {
    "./examples": false
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tessel/accel-mma84"
  },
  "author": {
    "name": "Tim Cameron Ryan",
    "email": "tim@timryan.org"
  },
  "license": "MIT",
  "devDependencies": {
    "tinytap": "~0.0.2"
  },
  "readme": "#Accelerometer\nDriver for the accel-mma84 Tessel accelerometer module ([MMA8452Q](http://www.freescale.com/files/sensors/doc/data_sheet/MMA8452Q.pdf)).\n\n##Installation\n```sh\nnpm install accel-mma84\n```\n\n##Example\n```js\n/*********************************************\nThis basic accelerometer example logs a stream\nof x, y, and z data from the accelerometer\n*********************************************/\n\nvar tessel = require('tessel');\nvar accel = require('accel-mma84').use(tessel.port['A']);\n\n// Initialize the accelerometer.\naccel.on('ready', function () {\n\t// Stream accelerometer data\n  accel.on('data', function (xyz) {\n    console.log(\"x:\", xyz[0].toFixed(2),\n      \"y:\", xyz[1].toFixed(2),\n      \"z:\", xyz[2].toFixed(2));\n  });\n});\n\naccel.on('error', function(err) {\n  console.log('error connecting', err);\n});\n\nsetInterval(function(){}, 20000);\n```\n\n##Methods\n\n##### * `accel.availableOutputRates()` Logs the available interrupt rates in Hz.\n\n##### * `accel.availableScaleRanges()` Logs the available accelerometer ranges (in units of Gs).\n\n##### * `accel.enableDataInterrupts(trueOrFalse, callback(err))` Enables or disables data interrupts. Set the first param truthy to enable, falsy to disable.\n\n##### * `accel.getAcceleration(callback(err, xyz))` Gets the acceleration from the device, outputs as array [x, y, z].\n\n##### * `accel.setOutputRate(rateInHz, callback(err))` Sets the output rate of the data (1.56-800 Hz).\n\n##### * `accel.setScaleRange(scaleRange, callback(err))` Sets the accelerometer to read up to 2, 4, or 8 Gs of acceleration (smaller range = better precision).\n\n##Events\n\n##### * `accel.on('data', callback(xyz))` Emitted when data is available. `xyz` is an array in the form of [x, y, z].\n\n##### * `accel.on('error', callback(err))` Emitted upon error.\n\n##### * `accel.on('ready', callback())` Emitted upon first successful communication between the Tessel and the module.\n\n##Further Examples\nSee the examples folder for code.\n\n* show-axes: Manipulate LEDs based on acceleration in the three axes.\n\n* change-rates: Change the polling rate.\n\n## License\n\nMIT\nAPACHE\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tessel/accel-mma84/issues"
  },
  "homepage": "https://github.com/tessel/accel-mma84",
  "_id": "accel-mma84@0.2.3",
  "dist": {
    "shasum": "6bbf80f69115251e82d9ca76aaf7e0d69db1d8f3"
  },
  "_from": "accel-mma84@",
  "_resolved": "https://registry.npmjs.org/accel-mma84/-/accel-mma84-0.2.3.tgz"
}
